*---instantiation---*
Input:
[1,2]

Output:
1
2


---------------------------------------------------

class ComplexNumber:
    def __init__(self,real=0,imaginary=0):
        self.real_part = real
        self.imaginary_part = imaginary
            
    
   

if __name__ == "__main__":
    import json
    input_args = list(json.loads(input()))

    complex_number = ComplexNumber(*input_args)

    print(complex_number.real_part)
    print(complex_number.imaginary_part)
*-----------------------*----------------------------*    

*----conjugate----*
Input:
[1,2]

Output:
1
-2


---------------------------------------------------

class ComplexNumber:
    def __init__(self,real=0,imaginary=0):
        self.real_part = real
        self.imaginary_part = imaginary
            
    def conjugate(self):
        return ComplexNumber(self.real_part,-self.imaginary_part)
        
        
    

if __name__ == "__main__":
    import json
    input_args = list(json.loads(input()))

    complex_number = ComplexNumber(*input_args)
    complex_number_conjugate = complex_number.conjugate()

    print(complex_number_conjugate.real_part)
    print(complex_number_conjugate.imaginary_part)
*-----------------------*----------------------------*    

*----Addition----*
Input:
[[1,2],[3,4]]

Output:
4
6


---------------------------------------------------

class ComplexNumber:
    def __init__(self,real = 0,imaginary = 0):
        self.real_part = real
        self.imaginary_part = imaginary
        
    def __add__(self,other):
        return ComplexNumber(self.real_part+other.real_part,self.imaginary_part+other.imaginary_part)

if __name__ == "__main__":
    import json
    input_args = list(json.loads(input()))

    complex_number1 = ComplexNumber(*input_args[0])
    complex_number2 = ComplexNumber(*input_args[1])

    complex_numbers_addition = complex_number1 + complex_number2

    print(complex_numbers_addition.real_part)
    print(complex_numbers_addition.imaginary_part)

*-----------------------*----------------------------*    

*---Subtraction---*
Input:
[[1,2],[3,4]]

Output:
-2
-2


---------------------------------------------------

class ComplexNumber:
    def __init__(self,real=0,imaginary=0):
        self.real_part = real
        self.imaginary_part = imaginary
    def __sub__(self,other):
        return ComplexNumber(self.real_part-other.real_part,self.imaginary_part-other.imaginary_part)


if __name__ == "__main__":
    import json
    input_args = list(json.loads(input()))

    complex_number1 = ComplexNumber(*input_args[0])
    complex_number2 = ComplexNumber(*input_args[1])

    complex_numbers_subtraction = complex_number1 - complex_number2

    print(complex_numbers_subtraction.real_part)
    print(complex_numbers_subtraction.imaginary_part)

*- *----------------------*----------------------------*    

*---Multiplication---*
Input:
[[1,2],[3,4]]

Output:
-5
10


---------------------------------------------------

class ComplexNumber:
    def __init__(self,real=0,imaginary=0):
        self.real_part = real
        self.imaginary_part = imaginary
    def __mul__(self,other):
        return ComplexNumber(self.real_part*other.real_part-self.imaginary_part*other.imaginary_part,self.real_part*other.imaginary_part+self.imaginary_part*other.real_part)

    

if __name__ == "__main__":
    import json
    input_args = list(json.loads(input()))

    complex_number1 = ComplexNumber(*input_args[0])
    complex_number2 = ComplexNumber(*input_args[1])

    complex_numbers_multiplication = complex_number1 * complex_number2

    print(complex_numbers_multiplication.real_part)
    print(complex_numbers_multiplication.imaginary_part)
    
*----------------------*----------------------------*    

*----Division----*
Input:
[[1,2],[3,4]]

Output:
0.44
0.08


---------------------------------------------------

"""
class ComplexNumber:
    def __init__(self,real=0,imaginary=0):
        self.real_part = real
        self.imaginary_part = imaginary
        

if __name__ == "__main__":
    import json
    input_args = list(json.loads(input()))

    complex_number1 = ComplexNumber(*input_args[0])
    complex_number2 = ComplexNumber(*input_args[1])

    complex_numbers_division = complex(complex_number1.real_part,complex_number1.imaginary_part) / complex(complex_number2.real_part,complex_number2.imaginary_part)
    
    #print( complex_numbers_division)
    
    complex_numbers_division = ComplexNumber(complex_numbers_division.real, complex_numbers_division.imag)
    

    print(complex_numbers_division.real_part)
    print(complex_numbers_division.imaginary_part)
    
"""

class ComplexNumber:
    def __init__(self,real=0,imaginary=0):
        self.real_part = real
        self.imaginary_part = imaginary
    
    def __truediv__(self,other):
        real = complex(self.real_part,self.imaginary_part)
        imag = complex(other.real_part,other.imaginary_part)
        final = real/imag
        return ComplexNumber(final.real,final.imag)
    

if __name__ == "__main__":
    import json
    input_args = list(json.loads(input()))

    complex_number1 = ComplexNumber(*input_args[0])
    complex_number2 = ComplexNumber(*input_args[1])

    complex_numbers_division = complex_number1 / complex_number2
    

    print(complex_numbers_division.real_part)
    print(complex_numbers_division.imaginary_part)
*-----------------------------------------------------------*

*-----Absolute------*
Input:
[1,2]

Output:
2.236


---------------------------------------------------

class ComplexNumber:
    def __init__(self,real=0,imaginary=0):
        self.real_part = real
        self.imaginary_part = imaginary
    
    def __abs__(self):
        return ((self.real_part**2+self.imaginary_part**2)**0.5)
        
if __name__ == "__main__":
    import json
    input_args = list(json.loads(input()))

    complex_number = ComplexNumber(*input_args)
    absolute_value = abs(complex_number)

    print(round(absolute_value,3))
*----------------------------------------------------------------*

*------Equality-------*
Input:
[[1,2],[1,2]]

Output:
True


---------------------------------------------------

class ComplexNumber:
    def __init__(self,real=0,imag=0):
        self.real_part = real
        self.imaginary_part = imag
        
    def __eq__(self,other):
        return bool(self.real_part==other.real_part and self.imaginary_part == other.imaginary_part)
        
            

if __name__ == "__main__":
    import json
    input_args = list(json.loads(input()))

    complex_number1 = ComplexNumber(*input_args[0])
    complex_number2 = ComplexNumber(*input_args[1])
    
    is_complex_numbers_equal = complex_number1 == complex_number2

    print(is_complex_numbers_equal)
*-------------------------------------------------------------------*


*-------print------*
Input:
[1,2]

Output:
1+2i


---------------------------------------------------

class ComplexNumber:
    def __init__(self,real=0,imag=0):
        self.real_part = real
        self.imaginary_part = imag
        

    def __str__(self):
        return f"{self.real_part}{self.imaginary_part:+}i"
        
    

if __name__ == "__main__":
    import json
    input_args = list(json.loads(input()))

    complex_number = ComplexNumber(*input_args)
    complex_number_str_value = str(complex_number)

    print(complex_number_str_value)
*-------------------------------------------------------*






